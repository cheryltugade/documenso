name: Regenerate Certificate

on:
  schedule:
    - cron: '0 13 2 6 *'  # June 2 at 13:00 UTC = June 2 at 9:00 AM EDT
  workflow_dispatch:

jobs:
  regenerate_certificate:
    name: 'Regenerate .p12 Certificate'
    runs-on: ubuntu-latest
    timeout-minutes: 5

    env:
      CERT_PASSWORD: ${{ secrets.NEXT_PRIVATE_SIGNING_PASSPHRASE }}
      RENDER_DEPLOY_HOOK: ${{ secrets.RENDER_DEPLOY_HOOK }}

    steps:
      - uses: actions/checkout@v4

      - name: Delete old certificate
        run: rm -f apps/web/resources/certificate.p12

      - name: Generate private key
        run: openssl genrsa -out private.key 2048

      - name: Generate certificate
        run: |
          openssl req -new -x509 -key private.key -out certificate.crt -days 365 -subj "/CN=sign.glenwood.studio"

      - name: Install expect
        run: sudo apt-get update && sudo apt-get install -y expect

      - name: Create PKCS#12 certificate using secret
        run: |
          expect <<EOF
          spawn openssl pkcs12 -export -out certificate.p12 -inkey private.key -in certificate.crt -legacy
          expect "Enter Export Password:"
          send "${CERT_PASSWORD}\r"
          expect "Verifying - Enter Export Password:"
          send "${CERT_PASSWORD}\r"
          expect eof
          EOF

      - name: Move certificate to correct location
        run: mv certificate.p12 apps/web/resources/

      - name: Commit and push updated certificate
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add apps/web/resources/certificate.p12
          git commit -m "Regenerate certificate.p12" || echo "No changes to commit"
          git push

      - name: Trigger Render Deploy Hook
        if: env.RENDER_DEPLOY_HOOK != ''
        run: |
          echo "Triggering Render deploy..."
          curl -fsSL -X POST "$RENDER_DEPLOY_HOOK"


